name: Check LLVM Releases

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  check-llvm-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for new LLVM release
        id: check-release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch the latest releases data from LLVM (up to 20)
          RELEASES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/llvm/llvm-project/releases?per_page=20")

          # Find the latest non-pre-release
          LATEST_TAG=$(echo "$RELEASES" | jq -r '[.[] | select(.prerelease == false)] | .[0].tag_name')

          if [ -z "$LATEST_TAG" ]; then
            echo "No stable release found."
            echo "update_needed=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          LATEST_VERSION=${LATEST_TAG#llvmorg-}

          # Read current version from build.yml
          CURRENT_VERSION=$(grep 'llvm_version:' .github/workflows/build.yml | awk '{print $2}')

          echo "Latest LLVM version: $LATEST_VERSION"
          echo "Current version: $CURRENT_VERSION"

          # Compare versions using sort -V
          if [ "$(printf '%s\n%s' "$CURRENT_VERSION" "$LATEST_VERSION" | sort -V | tail -n1)" != "$CURRENT_VERSION" ]; then
            echo "new_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update build.yml
        if: steps.check-release.outputs.update_needed == 'true'
        run: |
          sed -i "s/llvm_version: .*/llvm_version: ${{ steps.check-release.outputs.new_version }}/" .github/workflows/build.yml
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/workflows/build.yml
          git commit -m "Update LLVM version to ${{ steps.check-release.outputs.new_version }}"
          git push

      - name: Trigger build workflow
        if: steps.check-release.outputs.update_needed == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-build
